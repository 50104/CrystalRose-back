plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
    id 'application'
}

group = 'com.rose'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// 배포 서버에서 .env 파일 읽기
	implementation group: 'io.github.cdimascio', name: 'dotenv-java', version: '3.0.0'

	// log4j2
	implementation('org.springframework.boot:spring-boot-starter-log4j2') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// JWT
  implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
  implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
  implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

  // implementation 'commons-io:commons-io'

  // redis
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  // HTML 태그 파싱
  implementation 'org.jsoup:jsoup:1.17.2'

  // health check
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  // 테스트 코드
  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

  // Prometheus
  implementation 'io.micrometer:micrometer-registry-prometheus'
}

// log4j2 사용을 위해 Logback 제거
configurations.all {
  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

application {
  // 실행 가능한 JAR 파일을 만들기 위한 설정
  mainClass = 'com.rose.back.BackApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

processResources {
  // def envMap = [
  //   "SPRING_JWT_SECRET"                : System.getenv("SPRING_JWT_SECRET"),
  //   "CLOUD_AWS_CREDENTIALS_ACCESS_KEY" : System.getenv("CLOUD_AWS_CREDENTIALS_ACCESS_KEY"),
  //   "CLOUD_AWS_CREDENTIALS_SECRET_KEY" : System.getenv("CLOUD_AWS_CREDENTIALS_SECRET_KEY"),
  //   "CLOUD_AWS_REGION_STATIC"          : System.getenv("CLOUD_AWS_REGION_STATIC"),
  //   "CLOUD_AWS_S3_BUCKET"              : System.getenv("CLOUD_AWS_S3_BUCKET")
  // ]

  // filesMatching('**/*.yml') {
  //   expand(envMap)
  // }
  // filesMatching('**/*.properties') {
  //   expand(envMap)
  // }
}
