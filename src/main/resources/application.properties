spring.application.name=back
server.port=4000


# spring.datasource.url=jdbc:mysql://rosedb.cjss2ma24yld.ap-northeast-2.rds.amazonaws.com:3306/dodorose?useSSL=false&serverTimezone=UTC&connectTimeout=30000&socketTimeout=30000
# spring.datasource.username=solaya7
# spring.datasource.password=zmxncb1209
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# HikariCP 설정
spring.datasource.hikari.connection-timeout=30000 
# 30초
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=600000 
# 10분
spring.datasource.hikari.max-lifetime=1800000 
# 30분


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#MySql 설정
spring.datasource.url=jdbc:mysql://localhost:3306/DODOROSE?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=developer
spring.datasource.password=a123

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database=mysql

#테이블 변수 작명법 및 변경법
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#jpa 쿼리문 확인 가능
spring.jpa.show-sql=true

#DB의 고유 기능 사용 가능
spring.jpa.hibernate.ddl-auto=update

#sql의 가독성 높임(jpa 구현체인 hibernate 동작)
spring.jpa.properties.hibernate.format_sql=true

#파일 업로드 관련 설정
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=110MB

# 파일 업로드 경로 설정
file.upload-dir=src/main/resources/static/images
spring.mvc.static-path-pattern=/images/**

#정적리소스 위치
spring.web.resources.static-locations=classpath:/resources/static/, file:src/main/resources/static/images/

#profile 관리
spring.profiles.include=aws,oauth2

#swagger-ui 설정
#swagger-ui 접속 경로(http://localhost:4000/swagger-ui/index.html)
springdoc.swagger-ui.path=/swagger-ui.html

#OpenAPI JSON 문서 확인 주소 (http://localhost:4000/api-docs)
springdoc.api-docs.path=/api-docs

#기본 요청 컨텐츠 json
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

#ui 알파벳 순 정렬
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha

#swagger url 비활성화, json화 된 config 파일 대신 파라미터를 이용하여 swagger-ui에 접근하도록 함
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-query-params-without-oauth2=true
springdoc.swagger-ui.doc-expansion=none

#log4j 설정 / 로깅 설정
logging.config=classpath:log4j2.xml
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.com.mysql.cj=INFO
# logging.level.jdbc.sqlonly=off
# logging.level.jdbc.sqltiming=info
# logging.level.jdbc.resultsettable=info
# logging.level.jdbc.audit=off
# logging.level.jdbc.resultset=off
# logging.level.jdbc.connection=off
# logging.level.com.rose.back=DEBUG
# logging.level.org.springframework=INFO
# logging.level.org.hibernate=DEBUG
# logging.level.com.zaxxer.hikari=DEBUG
# logging.level.com.mysql.cj=DEBUG

uploadPath=src/main/resources/static/upload/

spring.output.ansi.enabled=always

# CKEditor
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true